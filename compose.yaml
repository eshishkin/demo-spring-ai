services:
  redis:
    image: 'redis/redis-stack:latest'
    ports:
      - '6379'
      - '8001:8001'

  kafka:
    image: apache/kafka:latest
    ports:
      - '29092:29092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: LISTENER://kafka:9092,CONTROLLER://kafka:9093,LISTENER_HOST://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka:9092,LISTENER_HOST://localhost:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,LISTENER:PLAINTEXT,LISTENER_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER

  init-kafka:
    image: apache/kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      cd /opt/kafka/bin
      # blocks until kafka is reachable
      ./kafka-topics.sh --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_raw --replication-factor 1 --partitions 3
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_raw_retry --replication-factor 1 --partitions 3
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_raw_dlq --replication-factor 1 --partitions 3
      
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_tokenized --replication-factor 1 --partitions 3
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_tokenized_retry --replication-factor 1 --partitions 3
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_tokenized_dlq --replication-factor 1 --partitions 3

      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_with_metadata --replication-factor 1 --partitions 3
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_with_metadata_retry --replication-factor 1 --partitions 3
      ./kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events_with_metadata_dlq --replication-factor 1 --partitions 3

      echo -e 'Successfully created the following topics:'
      ./kafka-topics.sh --bootstrap-server kafka:9092 --list
      "