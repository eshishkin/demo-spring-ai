server:
  port: 8082
vaadin:
  launch-browser: false
spring:
  application:
    name: demo-spring-ai
  docker:
    compose:
      lifecycle-management: start_only
  kafka:
    producer:
      bootstrap-servers: localhost:29092
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    streams:
      application-id: demo-spring-ai
      bootstrap-servers: localhost:29092
      stateDir: /tmp/kafka-streams/${spring.kafka.streams.application-id}
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
  datasource:
    username: postgres
    password: postgres
  liquibase:
    change-log: classpath:/changelog/changelog.xml
  ai:
    mcp:
      server:
        name: webmvc-mcp-server
        version: 1.0.0
        type: SYNC
        sse-message-endpoint: /mcp/messages
    vectorstore:
      pgvector:
        initialize-schema: true

    openai:
      base-url: https://api.proxyapi.ru/openai
      api-key: override-me
      chat:
        enabled: false
        options:
          model: gpt-4o-mini
      embedding:
        enabled: false
        options:
          model: text-embedding-ada-002
    ollama:
      chat:
        enabled: false
        options:
          model: llama3.2:1b
      embedding:
        enabled: false
        options:
          model: llama3.2:1b
jpa:
  properties:
    jakarta:
      persistence:
        schema-generation:
          scripts:
            action:
logging.level:
  org.springframework.web.client: DEBUG
  org.springframework.ai.chat: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "prometheus,health,info,env,metrics"

app:
  etl:
    steps:
      tokenizer:
        input: events_raw
        output: events_tokenized
      event-metadata-enricher:
        input: events_tokenized
        output: events_with_metadata
        additional:
          keywords_number: 8
      event-vector-saver:
        input: events_with_metadata

---
spring.config.activate.on-profile: openai

spring.ai.openai:
  chat.enabled: true
  embedding.enabled: true
---
spring.config.activate.on-profile: ollama

spring.ai.ollama:
  chat.enabled: true
  embedding.enabled: true
---